title: What I now know about HAproxied Django DB connections, and wish I'd known sooner
start: 2020-09-04 13:55:00+09:30
end: 2020-09-04 14:20:00+09:30
room: 4
track: devoops
type: P
abstract: <p>Asynchronous Celery tasks that manipulate a MySQL/Galera database from
  a Django application can produce very interesting behavior when HAProxy is involved.
  This talk discusses these issues, and proposes remedies available to both application
  developers and infrastructure operators.</p>
description: "<p>When you’re running a Django application, the following things are\
  \ all pretty commonplace:</p>\n<ul>\n<li>You use MySQL or MariaDB as your Django\
  \ database backend.</li>\n<li>You don’t run a single standalone MySQL/MariaDB instance,\
  \ but a Galera cluster.</li>\n<li>You run asynchronous tasks in Celery.</li>\n</ul>\n\
  <p>Now suppose your application doesn’t talk to your Galera cluster directly, but\
  \ via HAProxy. That’s not exactly unheard of; in fact it’s an officially documented\
  \ HA option for Galera. And, to complicate things further, this may be a feature\
  \ of your setup that you, the application developer, don't necessarily have control\
  \ over.</p>\n<p>In such a scenario, you may be dealing with very \"interesting\"\
  \ features of HAproxy which — if you are unfamiliar with them — can throw you very\
  \ nasty curveballs.</p>\n<p>Having been in the position where, together with my\
  \ team, I <em>was</em> indeed unfamiliar with some of HAProxy's/Galera's intricacies\
  \ and we were thus on he receiving end of those curveballs, I am taking this opportunity\
  \ to share our findings so that our pain is someone else's gain. You have multiple\
  \ options at your disposal — some in your infrastructure setup, and some in your\
  \ Django application code. This talk covers both those angles.</p>"
code: YZYTMX
speakers:
- BPBCDP
cw:
youtube_slug: 2qDh7tl-wpg
